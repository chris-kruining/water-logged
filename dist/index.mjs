import{build as $}from"esbuild";const p={reset:"\x1B[0m",cyan:"\x1B[36m",green:"\x1B[32m",red:"\x1B[31m"};let f;const s=new Proxy(()=>{},{get:(r,t)=>{if(Object.keys(p).includes(t)===!1)throw new Error(s.red`'${t}' is not a valid color!`);return f=t,s},apply:(r,t,[o,...c])=>`${p[f]}${o.flatMap((d,e)=>[d,c[e]??""]).join("")}${p.reset}`}),B=r=>({esm:"mjs",cjs:"cjs",iife:"js"})[r];async function w(r,t){let o=[];const c=()=>{let e;return o.push(new Promise(n=>e=n)),o.length===r.length&&Promise.all(o).then(n=>{o=[],d(n)}),e},d=e=>{const[n,u]=e.reduce(([l,i],{start:m,end:g})=>[Math.min(l,m),Math.max(i,g)],[1/0,0]),a=e.map(({format:l,start:i,end:m,result:g})=>{const y=g.errors.length===0;return(y?s.green:s.red)`${y?"\u2713":"\u26A0"} '${l}'(${Math.round(m-i)}ms)`}).join(`
`);console.log(s.cyan`ðŸŒŠ Finished build (${Math.round(u-n)}ms total)\n${a}\n`)};return Promise.all(r.map(e=>$({...t,format:e,outfile:t.outfile?.replaceAll(/\$formatExtension/g,B(e)).replaceAll(/\$format/g,e),outdir:t.outdir?.replaceAll(/\$formatExtension/g,B(e)).replaceAll(/\$format/g,e),plugins:[...t.plugins??[],{name:"Logger",setup(n){let u=0,a;n.onStart(()=>{u=performance.now(),a=c()}),n.onEnd(l=>{const i=performance.now();a({format:e,start:u,end:i,result:l})})}}]})))}export{w as compile};
//# sourceMappingURL=index.mjs.map
